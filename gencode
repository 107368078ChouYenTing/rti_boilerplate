#!/usr/bin/env bash
FILES=idl/*.idl
#check all the idl files in idl folder

./cleangen
 
for f in $FILES
	do
		#get message type from idl file
		MESSAGE_TYPE=$(awk '{for(i=1;i<=NF;i++) if ($i=="struct") print $(i+1)}' $f)
		#get the IDL filename for
		IDL_NAME=$(basename $f .idl)
		
		#create the folder based on the idl file for code generation
		MSG_LIBRARY=lib/boilerplate/$IDL_NAME
		mkdir -p $MSG_LIBRARY

		#copy the boilerplate templates on the created folder
		cp lib/boilerplate/boilertemplate/TemplateBoilerplate.cpp $MSG_LIBRARY
		cp lib/boilerplate/boilertemplate/TemplateBoilerplate.h $MSG_LIBRARY
		cp lib/boilerplate/boilertemplate/CMakeLists.txt $MSG_LIBRARY
		
		#parse the template and replace template msg to current message define in the idl file
		perl -pi -e "s/Template_TYPE_/$MESSAGE_TYPE/g" $MSG_LIBRARY/TemplateBoilerplate.cpp
		#parse template header files and replace with current idl filename
		perl -pi -e "s/Template/$IDL_NAME/g" $MSG_LIBRARY/TemplateBoilerplate.cpp

		perl -pi -e "s/Template_TYPE_/$MESSAGE_TYPE/g" $MSG_LIBRARY/TemplateBoilerplate.h
		perl -pi -e "s/Template/$IDL_NAME/g" $MSG_LIBRARY/TemplateBoilerplate.h

		#parse the template and replace with current idl filename
		perl -pi -e "s/Template/$IDL_NAME/g" $MSG_LIBRARY/CMakeLists.txt

		#rename boilerplates from template filename to idl filename
		mv $MSG_LIBRARY/TemplateBoilerplate.cpp $MSG_LIBRARY/${IDL_NAME}Boilerplate.cpp
		mv $MSG_LIBRARY/TemplateBoilerplate.h $MSG_LIBRARY/${IDL_NAME}Boilerplate.h

		#generate codes
		rtiddsgen -replace -language C++ -example x64Linux3gcc4.8.2 idl/${IDL_NAME}.idl -d $MSG_LIBRARY

	done